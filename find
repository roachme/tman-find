#!/bin/bash

PGNAME="find"
PATTERN=
TASKDIR=
PRJNAME=
TASKNAME=
PREFIX="${TASKDIR}"



# NOTE: what to find
# 1. project name
# 2. board name
# 3. task id
# 4. user files, directories, etc

die() {
	echo "$@" >&2
	exit 1
}

function usage()
{
    cat << EOF
Usage: tman find [OPTION]... PATTERN
    Find items in database.

    Options:
      -i    find task ID by PATTERN (under development)
      -b    find board name by PATTERN  (under development)
      -p    find project name by PATTERN (under development)
EOF
}


OPTS=$(getopt -o i:p:P:T:h --long prj:,taskid:,pgndir:,taskdir:help -n "$PGNAME" -- "$@")
if [ $? -ne 0 ]; then
    #echo "error parsing options" >&2
    exit 1
fi

## Reset the positional parameters to the parsed options
eval set -- "$OPTS"

while true; do
    case "$1" in
        -i)
            TASKNAME="$2"
            shift 2
            ;;
        -p)
            PRJNAME="$2"
            shift 2
            ;;
        -P)
            PGNDIR="$2"
            shift 2
            ;;
        -T)
            TASKDIR="$2"
            shift 2
            ;;
        -h)
            usage
            exit 0
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "$PGNAME: invalid option '$1'" >&2
            exit 1
    esac
done

PATTERN="$1"
[ -z "$PATTERN" ] && die "${PGNAME}: no pattern passed" >&2



function search()
{
    for prj in $(ls "$TASKDIR"); do
        find "$TASKDIR/$prj" -maxdepth 1 -name "*${PATTERN}*" | while read -r res; do
            res="${res/$TASKDIR\//}"
            PRJ="$(echo "$res" | cut -f 1 -d '/')"
            ID="$(echo "$res" | cut -f 2 -d '/')"
            echo "$PRJ - $ID"
        done
    done
}

# Code stolen from Unix pass command
cmd_find() {
	[[ $# -eq 0 ]] && die "Usage: find pass-names..."
	IFS="," eval 'echo "Search Terms: $*"'
	local terms="*$(printf '%s*|*' "$@")"
	tree -N -C -l --noreport -P "${terms%|*}" --prune --matchdirs --ignore-case "$TASKDIR" 3>&- | tail -n +2 | sed -E 's/\.gpg(\x1B\[[0-9]+m)?( ->|$)/\1\2/g'
}

cmd_find "$@"
